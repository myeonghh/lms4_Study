# -*- coding: utf-8 -*-
"""05. 함수

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1LPk5hl9yPE08re5c9z-fSrW5IJzY2dxC
"""

#예제51 함수 이용해서 두 수 중 큰 수찾기
#두 수를 입력받고, 그 중 큰 수를 찾아 반환한다.
#반환하는 로직은 func함수를 정의하고 사용해서 두 수 중 큰 수를 찾는다.

def func(num1, num2):  #정수 num1, num2를 매개변수로 받는 func함수 선언
    r = 0
    if num1 > num2: r = num1  #만약 num1이 num2보다 크면 r에 num1을 저장
    else: r = num2  #아니면 r에 num2를 저장

    return r  #r값을 리턴

num1 = int(input("정수 입력 : "))
num2 = int(input("정수 입력 : "))

func(num1, num2)  #num1, num2를 사용자에게 입력받아 그 숫자를 인수로 func함수 호출

#예제52 함수 이용해서 세 수중 큰 수 찾기
#세 수 중 큰 수를 찾아 반환하는 func 함수를 이용해서 세 수 중 큰 수를 찾는다.

def func(num1, num2, num3): #정수 num1, num2, num3을 매개변수로 받는 func함수 선언
    listA = [num1, num2, num3]  #num1, num2, num3를 리스트 listA에 추가
    r = 0

    for i in range(0, len(listA)):  #listA에 들어있는 숫자를 반복문으로 비교하여 큰수는 변수 r에 저장
        if listA[i] > r: r = listA[i]
    return r  #큰 수가 저장된 변수 r 리턴

num1 = int(input("정수 입력 : "))
num2 = int(input("정수 입력 : "))
num3 = int(input("정수 입력 : "))

func(num1, num2, num3) #num1, num2, num3을 사용자에게 입력받아 그 숫자를 인수로 func함수 호출

#예제53 함수 이용해서 1부터 10까지의 약수 구하기
#임의의 수에 대한 약수 구하는 func 함수를 이용해서 1부터 10까지의 수에 대한 약수를 구한다.

def func(num):  #정수 num을 매개변수로 받는 func함수 선언

    print(f"{num} :", end = " " )
    for i in range(1, num+1):  #1부터 매개변수까지 반복문으로 약수를 구해서 출력
        if num % i == 0: print(i, end = " ")
    print("\n")

for i in range(1, 11):  #1부터 10까지의 약수를 구해야 하기 때문에
    func(i)             #i를 1부터 10까지 반복문으로 돌리고 func함수 인수에 i를 집어넣고 함수 호출

#예제54 재귀함수를 이용해서 1부터 입력 받은 수까지의 합 구하기

#로직 참고
#num의 약수를 구하는 func 함수를 정의한다.
#func 함수를 호출한다. 이 때 i의 값을 전달한다.

def sum(num):  #정수 num을 매개변수로 갖는 sum함수 선언
    if num <= 1:  #만약 num이 1 이하이면 리턴값 1을 반환
        return 1
    else:
        return num + sum(num-1)  #그게 아니면 리턴값으로 num과 재귀함수 sum(num-1)을 더한 값을 반환


num = int(input("정수 입력 : "))
sum(num)  #사용자가 입력한 num을 인수로 사용하여 sum함수 호출

#예제55 재귀함수 이용해서 피보나치 수열 구하기

# 로직 참고
# 피보나치수열의 a번째 항을 구하는 fibo 함수를 정의한다.
# fibo 함수를 재귀호출한다.
# fibo 함수를 호출하고, fibo 함수에서 반환된 값을 result에 저장한다.

def fibo(num):  #정수 num을 매개변수로 갖는 fibo함수 선언
    result = 0
    if num <= 2: result = 1  #피보나치의 두번째 항까지는 1이기때문에 num이 2 이하이면 result 변수에 1 저장
    else: result = fibo(num-1) + fibo(num-2)  #그 외 경우는 재귀함수를 이용해서 result변수에 fibo(num-1) + fibo(num-2)을 저장

    return result  #result 값을 리턴값으로 반환

num = int(input("피보나치 수열의 항을 입력하세요 : "))
print(result)

